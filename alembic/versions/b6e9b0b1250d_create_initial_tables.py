"""create initial tables

Revision ID: b6e9b0b1250d
Revises: 
Create Date: 2025-08-10 02:07:45.697190

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy.schema as ss


# revision identifiers, used by Alembic.
revision: str = 'b6e9b0b1250d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authcodes',
    sa.Column('authcode_id', sa.String(length=36), nullable=False, comment='認証コードID'),
    sa.Column('code', sa.String(length=6), nullable=False, comment='コード'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='メールアドレス'),
    sa.Column('expire_datetime', sa.DateTime(), nullable=False, comment='有効期限'),
    sa.Column('delete_flag', sa.String(length=1), nullable=False, comment='削除フラグ'),
    sa.Column('create_datetime', sa.DateTime(), nullable=False, comment='作成日時'),
    sa.Column('update_datetime', sa.DateTime(), nullable=False, comment='更新日時'),
    sa.PrimaryKeyConstraint('authcode_id')
    )
    op.execute(ss.CreateSequence(ss.Sequence('user_id_seq')))
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), server_default=sa.text("nextval('user_id_seq')"), nullable=False, comment='ユーザーID'),
    sa.Column('username', sa.String(length=15), nullable=False, comment='ユーザー名'),
    sa.Column('account_name', sa.String(length=50), nullable=False, comment='アカウント名'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='メールアドレス'),
    sa.Column('birthday', sa.Date(), nullable=False, comment='生年月日'),
    sa.Column('self_introduction', sa.String(length=200), nullable=True, comment='自己紹介'),
    sa.Column('profile_image', sa.Text(), nullable=True, comment='プロフィール画像'),
    sa.Column('header_image', sa.Text(), nullable=True, comment='ヘッダー画像'),
    sa.Column('verified_flag', sa.String(length=1), nullable=False, comment='認証済みフラグ'),
    sa.Column('auth_failure_count', sa.Integer(), nullable=False, comment='認証失敗回数'),
    sa.Column('account_lock_flag', sa.String(length=1), nullable=False, comment='アカウントロックフラグ'),
    sa.Column('delete_flag', sa.String(length=1), nullable=False, comment='削除フラグ'),
    sa.Column('create_datetime', sa.DateTime(), nullable=False, comment='作成日時'),
    sa.Column('update_datetime', sa.DateTime(), nullable=False, comment='更新日時'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('user_credentials',
    sa.Column('user_id', sa.BigInteger(), nullable=False, comment='ユーザーID'),
    sa.Column('identity_type', sa.String(length=20), nullable=False, comment='識別子種別'),
    sa.Column('identity', sa.String(length=255), nullable=False, comment='識別子'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='ハッシュ化済みパスワード'),
    sa.Column('delete_flag', sa.String(length=1), nullable=False, comment='削除フラグ'),
    sa.Column('create_datetime', sa.DateTime(), nullable=False, comment='作成日時'),
    sa.Column('update_datetime', sa.DateTime(), nullable=False, comment='更新日時'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'identity_type'),
    sa.UniqueConstraint('identity')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_credentials')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.execute(ss.DropSequence(ss.Sequence('user_id_seq')))
    op.drop_table('authcodes')
    # ### end Alembic commands ###
